trade-repo.kafka.suffix=_{{.Values.propertiesEnvName}}
trade-repo.canonical-trades.kafka.topic=FX_TRADE_REPO_TRADES${trade-repo.kafka.suffix}
trade-repo.resolved-canonical-trades.kafka.topic=FX_TRADE_REPO_RESOLVED_TRADES${trade-repo.kafka.suffix}
trade-repo.error-canonical-trades.kafka.topic=FX_TRADE_REPO_ERROR_TRADES${trade-repo.kafka.suffix}
trade-repo.trade-lifecycle.kafka.topic=FX_TRADE_REPO_TRADE_LIFECYCLE${trade-repo.kafka.suffix}
trade-repo-events.debounce.kafka.topic=FX_TRADE_REPO_DEBOUNCE${trade-repo.kafka.suffix}
trade-repo.batch-processed.kafka.topic=FX_TRADE_REPO_BATCH_PROCESSED${trade-repo.kafka.suffix}
trade-repo.resolved-trades-batch.kafka.topic=FX_TRADE_REPO_BATCH_RESOLVED_TRADES${trade-repo.kafka.suffix}
trade-repo.batch.kafka.topic=FX_TRADE_REPO_BATCH_TRADES${trade-repo.kafka.suffix}
spring.config.use-legacy-processing=true
logging.config=classpath:log4j2-spring-{{.Values.propertiesEnvName}}.xml
cptls.s3.files.region={{.Values.region}}
trade-repo.s3.client.region=${cptls.s3.files.region}
trade-repo.s3.client.access-key=${cptls.s3.files.access_key_id}
trade-repo.s3.client.secret-key=${cptls.s3.files.secret_key}

spring.profiles.include=json_layout,kamus
self.kafka.topic.suffix=_{{.Values.propertiesEnvName}}
self.db_uri={{.Values.db_url}}
self.db_server={{ .Values.db_url }}
self.db_port=5432
self.db_name={{.Values.db_name}}
self.db_database={{.Values.db_name}}
spring.datasource.hikari.minimum-idle=0
self.bootstrapServers=b-1.{{.Values.cluster_name|replace "-" "" }}.{{ .Values.kafka_broker }}.c12.kafka.{{.Values.region}}.amazonaws.com:9092,b-2.{{.Values.cluster_name|replace "-" "" }}.{{ .Values.kafka_broker }}.c12.kafka.{{.Values.region}}.amazonaws.com:9092,b-3.{{.Values.cluster_name|replace "-" "" }}.{{ .Values.kafka_broker }}.c12.kafka.{{.Values.region}}.amazonaws.com:9092
self.staticData.base.url=http://static-data-management
common.staticData.url=http://static-data-management
common.static-data.urls.base=http://static-data-management

cptls.market-data.urls.base=http://cptls-market-data-service

admin.client.external.service.port=80
admin.client.service-url.domain=${SPRING_PROFILES_ACTIVE}-ingress.capitol.is

spring.boot.admin.client.url=http://spring-boot-admin
spring.boot.admin.client.instance.health-url=http://${SERVICE_NAME}/health
spring.boot.admin.client.instance.management-url=http://${SERVICE_NAME}/actuator
spring.boot.admin.client.instance.service-url=http://${SERVICE_NAME}.${SPRING_PROFILES_ACTIVE}-ingress.{{ .Values.domain }}/swagger-ui.html
spring.boot.admin.client.instance.name=${SERVICE_NAME}


